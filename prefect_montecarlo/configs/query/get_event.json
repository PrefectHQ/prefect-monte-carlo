{
  "getEvent": [
    "id",
    "eventType",
    "createdTime",
    {
      "anomaly": [
        "id",
        "uuid",
        "warehouseUuid",
        "ruleUuid",
        "anomalyId",
        "detectedOn",
        "startTime",
        "endTime",
        "isActive",
        "isFalsePositive",
        "reason",
        "data"
      ]
    },
    "data",
    {
      "ackBy": [
        "id",
        "cognitoUserId",
        "email",
        "firstName",
        "lastName",
        "state",
        "createdOn",
        "isSso",
        "role"
      ]
    },
    "ackTimestamp",
    "eventState",
    "notifiedUsers",
    "totalComments",
    "importanceScore",
    "isChild",
    "uuid",
    {
      "warehouse": [
        "id",
        "uuid",
        "name",
        "connectionType",
        "credentialsS3Key",
        "bqProjectId",
        "createdOn",
        "config",
        "dataSamplingEnabled",
        "valueIngestionEnabled",
        "valueBasedThresholdEnabled",
        "customSqlSamplingSupported",
        "customSqlSamplingEnabled"
      ]
    },
    {
      "table": [
        "id",
        "tableId",
        "fullTableId",
        "discoveredTime",
        "friendlyName",
        "description",
        "location",
        "projectName",
        "dataset",
        "tableType",
        "isEncrypted",
        "createdTime",
        "lastModified",
        "viewQuery",
        "labels",
        "path",
        "priority",
        "tracked",
        "status",
        "freshnessAnomaly",
        "sizeAnomaly",
        "freshnessSizeAnomaly",
        "metricAnomaly",
        "dynamicTable",
        "isDeleted",
        "lastObserved",
        "dataProvider",
        "mcon",
        "schemaChangeCount",
        "statusScalar",
        "nodeId",
        "isPartialDateRange",
        "isMuted",
        "isTransitioningDataProvider"
      ]
    },
    "monitorId",
    "customRuleEntities",
    "customRuleProjects",
    "customRuleDatasets",
    {
      "incident": [
        "id",
        "uuid",
        "createdTime",
        "updatedTime",
        "owner",
        "severity",
        "feedback",
        "feedbackTime",
        "lastUpdateUser",
        "project",
        "dataset",
        "incidentType",
        "incidentSubTypes",
        "incidentTime",
        "reactionType"
      ]
    },
    "eventGeneratedTime",
    {
      "rcaJobs": [
        "id",
        "uuid",
        "jobType",
        "setTs",
        "status",
        "executionStats"
      ]
    },
    {
      "tableStats": [
        "id",
        "resourceUuid",
        "fullTableId",
        "projectName",
        "datasetName",
        "tableName",
        "isImportant",
        "importanceScore",
        "avgReadsPerActiveDay",
        "totalUsers",
        "degreeOut",
        "avgWritesPerActiveDay"
      ]
    }
  ]
}